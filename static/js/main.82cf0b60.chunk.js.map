{"version":3,"sources":["img/background.gif","img/player1_Avatar.png","img/player2_Avatar.png","img/flyingRotated.png","components/ExitButton.js","components/LandingPage/LandingPage.js","img/backgroundCard.jpg","img/backgroundBoard.png","img/match.gif","img/cardBack.png","components/GameBoard/Card.js","components/GameBoard/cardsArray.js","components/GameBoard/Board.js","img/winner.png","img/trophy.png","components/Score/Score.js","App.js","reportWebVitals.js","index.js"],"names":["styleOverrides","ExitButton","marginLeft","color","top","right","Exit","style","display","shape","onClick","window","open","close","Title","Typography","Background","backgroundImage","background","height","backgroundSize","backgroundPosition","LandingPage","useState","isModalVisible","setIsModalVisible","playerOneName","setPlayerOneName","playerTwoName","setPlayerTwoName","Form","useForm","form","handleCancel","className","level","src","player1Avatar","alt","flying","title","visible","onCancel","footer","name","onFinish","values","player1","player2","Item","label","rules","required","message","placeholder","player2Avatar","wrapperCol","offset","type","htmlType","to","state","playerOne","playerTwo","Card","indCard","selectedCard","showCard","matched","cardBack","cards","backgroundCard","CardContainer","backgroundBoard","backgroundRepeat","width","padding","borderRadius","marginTop","CardContainerMatch","match","Board","playersTurn","setPlayerTurn","shuffledCards","setShuffledCards","cardOne","setCardOne","cardTwo","setCardTwo","playerOneScore","setPlayerOneScore","playerTwoScore","setPlayerTwoScore","rocketShip","setRocketShip","time","setTime","start","setStart","location","useLocation","navigate","useNavigate","shuffle","shuffled","sort","Math","random","map","id","useEffect","card","length","some","e","interval","setInterval","prevTime","clearInterval","cardOneNumber","cardTwoNumber","cardOneValues","split","cardTwoValues","cardOneSuit","cardTwoSuit","number","checkNumber","suit","checkColor","cardsOnBoard","setTimeout","prevCount","ArrowLeftOutlined","floor","slice","Score","scoreBoard","setScoreBoard","draw","setDraw","scoreCard","avatar","score","a","b","BackArrow","Winner","Trophy","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.82cf0b60.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/background.1b0d7fa0.gif\";","export default __webpack_public_path__ + \"static/media/player1_Avatar.c05d1652.png\";","export default __webpack_public_path__ + \"static/media/player2_Avatar.107f57d2.png\";","export default __webpack_public_path__ + \"static/media/flyingRotated.ca76465f.png\";","import React from \"react\";\n\n// Antd imports\nimport { Button } from \"antd\";\n\nconst styleOverrides = {\n  ExitButton: {\n    marginLeft: \"auto\",\n    color: \"red\",\n    top: 10,\n    right: 10,\n  },\n};\n\nconst Exit = () => {\n  // A bit hacky as window.close is only allowed to close windows it opened.\n  const closeWindow = () => {\n    window.open(\"about:blank\", \"_self\");\n    window.close();\n  };\n  return (\n    <div style={{ display: \"flex\" }}>\n      <Button\n        shape=\"round\"\n        onClick={closeWindow}\n        style={styleOverrides.ExitButton}\n      >\n        Exit Game\n      </Button>\n    </div>\n  );\n};\n\nexport default Exit;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// Antd imports\nimport { Button, Typography, Modal, Form, Input } from \"antd\";\n\n// Images\nimport background from \"../../img/background.gif\";\nimport player1Avatar from \"../../img/player1_Avatar.png\";\nimport player2Avatar from \"../../img/player2_Avatar.png\";\nimport flying from \"../../img/flyingRotated.png\";\n\n// Components\nimport Exit from \"../ExitButton\";\n\n// Style\nimport \"./LandingPage.css\";\n\nconst { Title } = Typography;\n\nconst styleOverrides = {\n  Background: {\n    backgroundImage: `url(${background})`,\n    height: \"100vh\",\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center center\",\n  },\n};\n\nconst LandingPage = () => {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [playerOneName, setPlayerOneName] = useState(\"Player 1\");\n  const [playerTwoName, setPlayerTwoName] = useState(\"Player 2\");\n\n  const [form] = Form.useForm();\n\n  // Show player naming modal\n  const championSelect = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  // Set players names\n  const onFinish = (values) => {\n    setPlayerOneName(values.player1);\n    setPlayerTwoName(values.player2);\n    setIsModalVisible(false);\n  };\n\n  return (\n    <div style={styleOverrides.Background}>\n      <Exit />\n      <div>\n        <Title className=\"gameTitle\" level={1}>\n          Memory Invaders\n        </Title>\n      </div>\n      <div>\n        <Title className=\"gameTitle\" level={2}>\n          Ready for lift off?\n        </Title>\n      </div>\n      <div className=\"playersContainer\">\n        <div className=\"playerOneContainer\">\n          <img className=\"playerPicture\" src={player1Avatar} alt=\"Player_1\" />\n          <Title className=\"gameTitle\" level={3}>\n            {playerOneName}\n          </Title>\n        </div>\n        <div className=\"championContainer\">\n          <Button\n            className=\"championButton\"\n            onClick={championSelect}\n            shape=\"round\"\n          >\n            Name Your Champion\n          </Button>\n          <img className=\"flyingMan\" src={flying} alt=\"flying\" />\n          <Modal\n            title=\"Choose Wisely\"\n            visible={isModalVisible}\n            onCancel={handleCancel}\n            footer={[\n              <Button key=\"back\" onClick={handleCancel}>\n                Return\n              </Button>,\n            ]}\n          >\n            <Form form={form} name=\"championForm\" onFinish={onFinish}>\n              <img className=\"avatarsModal\" src={player1Avatar} alt=\"Player_1\" />\n              <Form.Item\n                name=\"player1\"\n                label=\"Player 1\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please give your champion a name!\",\n                  },\n                ]}\n              >\n                <Input placeholder=\"Player One\" />\n              </Form.Item>\n              <img\n                className=\"avatarsModal\"\n                src={player2Avatar}\n                alt=\"Player_2\"\n              />\n              <Form.Item\n                name=\"player2\"\n                label=\"Player 2\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please give your champion a name!\",\n                  },\n                ]}\n              >\n                <Input placeholder=\"Player Two\" />\n              </Form.Item>\n              <Form.Item wrapperCol={{ offset: 10 }}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  Set Names\n                </Button>\n              </Form.Item>\n            </Form>\n          </Modal>\n        </div>\n        <div className=\"playerTwoContainer\">\n          <img className=\"playerPicture\" src={player2Avatar} alt=\"Player_2\" />\n          <Title className=\"gameTitle\" level={3}>\n            {playerTwoName}\n          </Title>\n        </div>\n      </div>\n      <Link\n        to=\"/play\"\n        state={{ playerOne: playerOneName, playerTwo: playerTwoName }}\n      >\n        <Button shape=\"round\" className=\"play\">\n          LET'S PLAY\n        </Button>\n      </Link>\n    </div>\n  );\n};\n\nexport default LandingPage;\n","export default __webpack_public_path__ + \"static/media/backgroundCard.814060ff.jpg\";","export default __webpack_public_path__ + \"static/media/backgroundBoard.ad1c7a9c.png\";","export default __webpack_public_path__ + \"static/media/match.b331727d.gif\";","export default __webpack_public_path__ + \"static/media/cardBack.45e20874.png\";","import React from \"react\";\n\n// Images\nimport cardBack from \"../../img/cardBack.png\";\n\n// Style\nimport \"./Card.css\";\n\nconst Card = ({ indCard, selectedCard, showCard, matched }) => {\n  // Set selected card\n  const handleSelectedCard = () => {\n    selectedCard(indCard);\n  };\n  return (\n    <div className=\"card\">\n      {/* If matched already, hide */}\n      <div className={matched ? \"matched\" : \"\"}>\n        {/* Flip selected card */}\n        <div className={showCard ? \"flipped\" : \"\"}>\n          {/* Front of card (value) */}\n          <img className=\"front\" src={indCard.src} alt=\"cardFront\" />\n          {/* Back of card (Speco decal) */}\n          <img\n            className=\"back\"\n            src={cardBack}\n            alt=\"cardBack\"\n            onClick={handleSelectedCard}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","// Array of the playing cards\nexport const cards = [\n    { src: \"/cards/2_of_clubs.png\" },\n    { src: \"/cards/2_of_diamonds.png\" },\n    { src: \"/cards/2_of_hearts.png\" },\n    { src: \"/cards/2_of_spades.png\" },\n    { src: \"/cards/3_of_clubs.png\" },\n    { src: \"/cards/3_of_diamonds.png\" },\n    { src: \"/cards/3_of_hearts.png\" },\n    { src: \"/cards/3_of_spades.png\" },\n    { src: \"/cards/4_of_clubs.png\" },\n    { src: \"/cards/4_of_diamonds.png\" },\n    { src: \"/cards/4_of_hearts.png\" },\n    { src: \"/cards/4_of_spades.png\" },\n    { src: \"/cards/5_of_clubs.png\" },\n    { src: \"/cards/5_of_diamonds.png\" },\n    { src: \"/cards/5_of_hearts.png\" },\n    { src: \"/cards/5_of_spades.png\" },\n    { src: \"/cards/6_of_clubs.png\" },\n    { src: \"/cards/6_of_diamonds.png\" },\n    { src: \"/cards/6_of_hearts.png\" },\n    { src: \"/cards/6_of_spades.png\" },\n    { src: \"/cards/7_of_clubs.png\" },\n    { src: \"/cards/7_of_diamonds.png\" },\n    { src: \"/cards/7_of_hearts.png\" },\n    { src: \"/cards/7_of_spades.png\" },\n    { src: \"/cards/8_of_clubs.png\" },\n    { src: \"/cards/8_of_diamonds.png\" },\n    { src: \"/cards/8_of_hearts.png\" },\n    { src: \"/cards/8_of_spades.png\" },\n    { src: \"/cards/9_of_clubs.png\" },\n    { src: \"/cards/9_of_diamonds.png\" },\n    { src: \"/cards/9_of_hearts.png\" },\n    { src: \"/cards/9_of_spades.png\" },\n    { src: \"/cards/10_of_clubs.png\" },\n    { src: \"/cards/10_of_diamonds.png\" },\n    { src: \"/cards/10_of_hearts.png\" },\n    { src: \"/cards/10_of_spades.png\" },\n    { src: \"/cards/jack_of_clubs.png\" },\n    { src: \"/cards/jack_of_diamonds.png\" },\n    { src: \"/cards/jack_of_hearts.png\" },\n    { src: \"/cards/jack_of_spades.png\" },\n    { src: \"/cards/queen_of_clubs.png\" },\n    { src: \"/cards/queen_of_diamonds.png\" },\n    { src: \"/cards/queen_of_hearts.png\" },\n    { src: \"/cards/queen_of_spades.png\" },\n    { src: \"/cards/king_of_clubs.png\" },\n    { src: \"/cards/king_of_diamonds.png\" },\n    { src: \"/cards/king_of_hearts.png\" },\n    { src: \"/cards/king_of_spades.png\" },\n    { src: \"/cards/ace_of_clubs.png\" },\n    { src: \"/cards/ace_of_diamonds.png\" },\n    { src: \"/cards/ace_of_hearts.png\" },\n    { src: \"/cards/ace_of_spades.png\" },\n    { src: \"/cards/joker_red.png\" },\n    { src: \"/cards/joker_black.png\" },\n  ];\n\n  export default cards;","import React, { useEffect, useState } from \"react\";\nimport { useLocation, Link, useNavigate } from \"react-router-dom\";\n\n// Antd imports\nimport { Button, Typography } from \"antd\";\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\n\n// Images\nimport backgroundCard from \"../../img/backgroundCard.jpg\";\nimport backgroundBoard from \"../../img/backgroundBoard.png\";\nimport match from \"../../img/match.gif\";\nimport player1Avatar from \"../../img/player1_Avatar.png\";\nimport player2Avatar from \"../../img/player2_Avatar.png\";\n\n// Components\nimport Card from \"../GameBoard/Card\";\nimport Exit from \"../ExitButton\";\n\n// Cards\nimport cards from \"./cardsArray\";\n\n// Style\nimport \"./Board.css\";\n\nconst { Title } = Typography;\n\n// Style overrides, kept within file ease of image imports\nconst styleOverrides = {\n  Background: {\n    backgroundImage: `url(${backgroundCard})`,\n    height: \"100vh\",\n  },\n  CardContainer: {\n    backgroundImage: `url(${backgroundBoard})`,\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundPosition: \"center center\",\n    width: \"70%\",\n    padding: 10,\n    borderRadius: 20,\n    height: \"85vh\",\n    marginTop: -25,\n  },\n  CardContainerMatch: {\n    backgroundImage: `url(${match})`,\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundPosition: \"center center\",\n    width: \"70%\",\n    padding: 10,\n    borderRadius: 20,\n    height: \"85vh\",\n    marginTop: -25,\n  },\n};\n\nconst Board = () => {\n  const [playersTurn, setPlayerTurn] = useState(true);\n  const [shuffledCards, setShuffledCards] = useState([]);\n  const [cardOne, setCardOne] = useState(null);\n  const [cardTwo, setCardTwo] = useState(null);\n  const [playerOneScore, setPlayerOneScore] = useState(0);\n  const [playerTwoScore, setPlayerTwoScore] = useState(0);\n  const [rocketShip, setRocketShip] = useState(true);\n  const [time, setTime] = useState(0);\n  const [start, setStart] = useState(false);\n\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  // Shuffle cards, reset score and clock\n  const shuffle = () => {\n    const shuffled = [...cards]\n      .sort(() => Math.random() - 0.5)\n      .map((cards) => ({ ...cards, id: Math.random(), matched: false }));\n    setShuffledCards(shuffled);\n    setCardOne(null);\n    setCardTwo(null);\n    setPlayerOneScore(0);\n    setPlayerTwoScore(0);\n    setTime(0);\n    setStart(true);\n  };\n\n  // Call shuffle on load\n  useEffect(() => {\n    shuffle();\n  }, []);\n\n  // Assign first and second card\n  const selectedCard = (card) => {\n    cardOne ? setCardTwo(card) : setCardOne(card);\n  };\n\n  // Check if card numbers (value) match\n  const checkNumber = (cardOneNumber, cardTwoNumber) => {\n    if (cardOneNumber === cardTwoNumber) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  // Check if card colour matches\n  const checkColor = (cardOneSuit, cardTwoSuit) => {\n    if (cardOneSuit === cardTwoSuit) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  // Navigate to Score on game complete\n  useEffect(() => {\n    if (shuffledCards.length > 0) {\n      if (shuffledCards.some((e) => e.matched === false)) {\n      } else {\n        navigate(\"/score\", {\n          state: {\n            playerOne: location.state.playerOne,\n            playerTwo: location.state.playerTwo,\n            playerOneScore: playerOneScore,\n            playerTwoScore: playerTwoScore,\n          },\n        });\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [shuffledCards]);\n\n  // Game Clock\n  useEffect(() => {\n    let interval = null;\n    if (start) {\n      interval = setInterval(() => {\n        setTime((prevTime) => prevTime + 10);\n      }, 10);\n    } else {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [start]);\n\n  // Show 'Its a Match' Rocket\n  const showRocket = () => {\n    setRocketShip(false);\n    setTimeout(() => setRocketShip(true), 1600);\n  };\n\n  // Match cards\n  useEffect(() => {\n    if (cardOne && cardTwo) {\n      // Split card src (e.g. \"/cards/2_of_clubs.png\")\n      const cardOneValues = cardOne.src.split(\"_\");\n      const cardTwoValues = cardTwo.src.split(\"_\");\n      let cardOneNumber = null;\n      let cardTwoNumber = null;\n      let cardOneSuit = null;\n      let cardTwoSuit = null;\n      // (e.g. \"/cards/2\")\n      cardOneNumber = cardOneValues[0];\n      cardTwoNumber = cardTwoValues[0];\n      // Identify if card One is a Jocker or not based of split length (_).\n        //  Length of \"/cards/2_of_clubs.png\" = 3\n        //  Length of \"/cards/joker_black.png\" = 2\n      if (cardOneValues.length > 2) {\n        cardOneSuit = cardOneValues[2];\n        // Match suit to colour\n        if (cardOneSuit === \"clubs.png\" || cardOneSuit === \"spades.png\") {\n          cardOneSuit = \"black\";\n        } else {\n          cardOneSuit = \"red\";\n        }\n      }\n      if (cardTwoValues.length > 2) {\n        cardTwoSuit = cardTwoValues[2];\n        if (cardTwoSuit === \"clubs.png\" || cardTwoSuit === \"spades.png\") {\n          cardTwoSuit = \"black\";\n        } else {\n          cardTwoSuit = \"red\";\n        }\n      }\n      if (cardOneValues.length === 2) {\n        cardOneSuit = \"Jocker\";\n      }\n      if (cardTwoValues.length === 2) {\n        cardTwoSuit = \"Jocker\";\n      }\n      const number = checkNumber(cardOneNumber, cardTwoNumber);\n      const suit = checkColor(cardOneSuit, cardTwoSuit);\n\n      // If cards match, update 'matched' value to 'true' for both cards\n      if (number && suit) {\n        setShuffledCards((cardsOnBoard) => {\n          return cardsOnBoard.map((card) => {\n            if (card.src === cardOne.src) {\n              return { ...card, matched: true };\n            }\n            if (card.src === cardTwo.src) {\n              return { ...card, matched: true };\n            } else {\n              return card;\n            }\n          });\n        });\n        // Show rocket animation\n        setTimeout(showRocket());\n        // Reset card selection\n        setCardOne(null);\n        setCardTwo(null);\n        // Add score\n        if (playersTurn) {\n          setPlayerOneScore((prevCount) => prevCount + 10);\n        } else {\n          setPlayerTwoScore((prevCount) => prevCount + 10);\n        }\n      // If no match, reset card selection and next players turn\n      } else {\n        setTimeout(() => {\n          setCardOne(null);\n          setCardTwo(null);\n          setPlayerTurn(!playersTurn);\n        }, 800);\n      }\n    }\n  }, [cardOne, cardTwo, playersTurn]);\n\n  return (\n    <div style={styleOverrides.Background}>\n      <Exit />\n\n      <div>\n        <Link\n          to=\"/\"\n          state={{ playerOne: \"playerOneName\", playerTwo: \"playerTwoName\" }}\n        >\n          <ArrowLeftOutlined className=\"backArrow\" />\n        </Link>\n      </div>\n\n      <div className=\"players\">\n        <div className=\"playerOne\">\n          <img className=\"avatars\" src={player1Avatar} alt=\"Player_1\" />\n          <Title className=\"gameTitle\" level={3}>\n            {location.state.playerOne}\n          </Title>\n          <Title className=\"gameTitle\" level={4}>\n            Score: {playerOneScore}\n          </Title>\n          {playersTurn && (\n            <div className=\"playerTurn\">\n              <Title className=\"playerTurnText\" level={4}>\n                It's your turn\n              </Title>\n            </div>\n          )}\n        </div>\n        {rocketShip && (\n          <div style={styleOverrides.CardContainer}>\n            <div className=\"cardLayout\">\n              {shuffledCards.map((indCard) => (\n                // Component to handle individual cards\n                <Card\n                  key={indCard.id}\n                  indCard={indCard}\n                  selectedCard={selectedCard}\n                  showCard={indCard === cardOne || indCard === cardTwo}\n                  matched={indCard.matched}\n                />\n              ))}\n            </div>\n          </div>\n        )}\n        {!rocketShip && <div style={styleOverrides.CardContainerMatch}></div>}\n\n        <div className=\"playerTwo\">\n          <img className=\"avatars\" src={player2Avatar} alt=\"Player_2\" />\n          <Title className=\"gameTitle\" level={3}>\n            {location.state.playerTwo}\n          </Title>\n          <Title className=\"gameTitle\" level={4}>\n            Score: {playerTwoScore}\n          </Title>\n          {!playersTurn && (\n            <div className=\"playerTurn\">\n              <Title className=\"playerTurnText\" level={4}>\n                It's your turn\n              </Title>\n            </div>\n          )}\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"column\">\n          <Link\n            to=\"/score\"\n            state={{\n              playerOne: location.state.playerOne,\n              playerTwo: location.state.playerTwo,\n              playerOneScore: playerOneScore,\n              playerTwoScore: playerTwoScore,\n            }}\n          >\n            <Button className=\"bottomButtons\">End Game</Button>\n          </Link>\n        </div>\n        <div className=\"column\">\n          {/* Game timer */}\n          {(\"0\" + Math.floor((time / 60000) % 60)).slice(-2)}:\n          {(\"0\" + Math.floor((time / 1000) % 60)).slice(-2)}\n        </div>\n        <div className=\"column\">\n          <Button className=\"bottomButtons\" onClick={shuffle}>\n            Play Again\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Board;\n","export default __webpack_public_path__ + \"static/media/winner.de5c7bb9.png\";","export default __webpack_public_path__ + \"static/media/trophy.07e5d126.png\";","import React, { useEffect, useState } from \"react\";\nimport { useLocation, Link } from \"react-router-dom\";\n\n// Antd imports\nimport { Button, Typography } from \"antd\";\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\n\n// Images\nimport backgroundCard from \"../../img/backgroundCard.jpg\";\nimport player1Avatar from \"../../img/player1_Avatar.png\";\nimport player2Avatar from \"../../img/player2_Avatar.png\";\nimport Winner from \"../../img/winner.png\";\nimport Trophy from \"../../img/trophy.png\";\n\n// Components\nimport Exit from \"../ExitButton\";\n\n// Style\nimport \"./Score.css\";\n\nconst { Title } = Typography;\n\nconst styleOverrides = {\n  Background: {\n    backgroundImage: `url(${backgroundCard})`,\n    height: \"100vh\",\n  }\n};\n\nconst Score = () => {\n  const [scoreBoard, setScoreBoard] = useState([0, 0]);\n  const [draw, setDraw] = useState(false);\n  const location = useLocation();\n\n  // Create a sorted array of the player based on score\n  useEffect(() => {\n    if (location.state.playerTwoScore === location.state.playerOneScore) {\n      setDraw(true);\n    }\n    const scoreCard = [\n      {\n        avatar: player1Avatar,\n        name: location.state.playerOne,\n        score: location.state.playerOneScore,\n      },\n      {\n        avatar: player2Avatar,\n        name: location.state.playerTwo,\n        score: location.state.playerTwoScore,\n      },\n    ];\n    setScoreBoard(scoreCard.sort((a, b) => (a.score < b.score ? 1 : -1)));\n  }, [location.state.playerOne, location.state.playerOneScore, location.state.playerTwo, location.state.playerTwoScore]);\n\n  return (\n    <div style={styleOverrides.Background}>\n      <Exit />\n      <div>\n        <Link to=\"/\">\n          <ArrowLeftOutlined\n            className=\"backArrow\"\n            style={styleOverrides.BackArrow}\n          />\n        </Link>\n      </div>\n      {scoreBoard.length > 0 && (\n        <div>\n          <div>\n            <Title className=\"gameTitle\" level={1}>\n              Well Done!\n            </Title>\n            <Title className=\"gameTitle\" level={1}>\n              {draw ? \"It's a DRAW!\" : scoreBoard[0].name}\n            </Title>\n            <div className=\"winner\">\n              <img className=\"kingAvatars\" src={Winner} alt=\"WINNER!\" />\n            </div>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"column\">\n              <img\n                className=\"avatars\"\n                src={scoreBoard[0].avatar}\n                alt=\"Player\"\n              />\n            </div>\n            <div className=\"column\">\n              <Title className=\"scoreText\" level={3}>\n                {draw ? \"Draw\" : \"1st\"}\n              </Title>\n            </div>\n            <div className=\"column\">\n              <Title className=\"scoreText\" level={4}>\n                {scoreBoard[0].name}\n              </Title>\n            </div>\n            <div className=\"column\">\n              <Title className=\"scoreText\" level={4}>\n                Score: {scoreBoard[0].score}\n              </Title>\n            </div>\n            <div className=\"column\">\n              <img className=\"trophy\" src={Trophy} alt=\"WINNER!\" />\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"column\">\n              <img\n                className=\"avatars\"\n                src={scoreBoard[1].avatar}\n                alt=\"Player\"\n              />\n            </div>\n            <div className=\"column\">\n              <Title className=\"scoreText\" level={3}>\n                {draw ? \"Draw\" : \"2nd\"}\n              </Title>\n            </div>\n            <div className=\"column\">\n              <Title className=\"scoreText\" level={4}>\n                {scoreBoard[1].name}\n              </Title>\n            </div>\n            <div className=\"column\">\n              <Title className=\"scoreText\" level={4}>\n                Score: {scoreBoard[1].score}\n              </Title>\n            </div>\n            <div className=\"column\">\n              {draw ? (\n                <img className=\"trophy\" src={Trophy} alt=\"WINNER!\" />\n              ) : (\n                \"\"\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n\n      <Link\n        to=\"/play\"\n        state={{\n          playerOne: location.state.playerOne,\n          playerTwo: location.state.playerTwo,\n        }}\n      >\n        <Button shape=\"round\" className=\"playAgainButton\">\n          PLAY AGAIN\n        </Button>\n      </Link>\n    </div>\n  );\n};\n\nexport default Score;\n","import React from \"react\";\nimport LandingPage from \"./components/LandingPage/LandingPage\";\nimport Board from \"./components/GameBoard/Board\";\nimport Score from \"./components/Score/Score\";\nimport { Routes, Route } from \"react-router-dom\";\n\nimport \"antd/dist/antd.css\";\n\nfunction App() {\n  return (\n    <div>\n      <Routes>\n        <Route path=\"/\" element={<LandingPage />} />\n        <Route path=\"/play\" element={<Board />} />\n        <Route path=\"/score\" element={<Score />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n      <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}